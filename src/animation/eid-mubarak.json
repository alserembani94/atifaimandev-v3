{"nm":"Comp 9","ddd":0,"h":512,"w":512,"meta":{"g":"@lottiefiles/toolkit-js 0.33.2"},"layers":[{"ty":4,"nm":"Layer 10","sr":1,"st":0,"op":250,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-11.016,-131.392,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[244.984,104.608,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-9.422,-2.127],[29.425,0.436],[-4.882,1.096],[0.515,3.227],[-2.693,1.85],[-3.207,-0.628],[-2.588,-1.995],[-3.543,2.538],[-4.303,-0.692],[-1.345,-1.878],[0.477,-2.164],[1.056,-1.949],[-2.386,-1.319],[0.845,-2.592]],"o":[[-29.125,4.213],[4.882,-1.096],[-3.264,0.151],[-0.515,-3.227],[2.693,-1.85],[3.207,0.628],[0.729,-4.297],[3.543,-2.538],[2.281,0.367],[1.291,1.802],[-0.477,2.164],[1.746,-2.094],[2.386,1.319],[9.612,-0.949]],"v":[[152.967,-97.357],[64.957,-91.68],[79.224,-95.259],[71.636,-101.86],[75.54,-110.291],[84.937,-111.966],[93.673,-107.716],[99.485,-119.161],[111.892,-122.081],[117.842,-118.899],[118.84,-112.522],[116.238,-106.429],[124.203,-107.944],[126.969,-100.924]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.8,0.9098,0.9216],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[110.314,-106.717],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[150.314,-146.717],"t":0,"ti":[0,0],"to":[-6.667,6.667]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[110.314,-106.717],"t":75,"ti":[-6.667,6.667],"to":[0,0]},{"s":[150.314,-146.717],"t":150}],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-12.026,-2.714],[37.559,0.557],[-6.231,1.399],[0.657,4.119],[-3.438,2.362],[-4.093,-0.801],[-3.303,-2.547],[-4.522,3.24],[-5.493,-0.883],[-1.717,-2.397],[0.609,-2.762],[1.348,-2.487],[-3.046,-1.684],[1.078,-3.309]],"o":[[-37.176,5.377],[6.231,-1.399],[-4.166,0.193],[-0.657,-4.119],[3.438,-2.362],[4.093,0.801],[0.93,-5.485],[4.522,-3.24],[2.911,0.468],[1.647,2.3],[-0.609,2.762],[2.229,-2.673],[3.045,1.684],[12.269,-1.211]],"v":[[-62.661,-139.345],[-175,-132.098],[-156.789,-136.667],[-166.475,-145.092],[-161.492,-155.854],[-149.497,-157.992],[-138.346,-152.567],[-130.927,-167.176],[-115.091,-170.903],[-107.495,-166.841],[-106.223,-158.702],[-109.543,-150.924],[-99.376,-152.858],[-95.846,-143.898]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.8,0.9098,0.9216],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[-124.703,-145.087],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-124.703,-145.087],"t":0,"ti":[0,0],"to":[-9.393,-5.396]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-181.059,-177.461],"t":37.5,"ti":[0,0],"to":[0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-124.703,-145.087],"t":75,"ti":[0,0],"to":[0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-181.059,-177.461],"t":112.5,"ti":[-9.393,-5.396],"to":[0,0]},{"s":[-124.703,-145.087],"t":150}],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":1},{"ty":4,"nm":"Layer 9","sr":1,"st":75,"op":325,"ip":75,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-110.332,-17.276,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0,0,100],"t":112.5},{"s":[100,100,100],"t":120}],"ix":6,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[145.668,238.724,0],"t":120,"ti":[2.998,5.731,0],"to":[-2.998,-5.731,0]},{"s":[127.682,204.335,0],"t":150}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[100],"t":145.5},{"s":[0],"t":150}],"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura","ix":1,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura 2","ix":2,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[4.683,4.886],[0.38,2.971],[-2.688,1.322],[-2.219,-1.346],[-1.655,-2],[-2.08,3.666],[-3.625,-2.151],[0.56,-3.777],[5.109,-4.259]],"o":[[-2.073,-2.163],[-0.38,-2.972],[2.329,-1.146],[2.219,1.346],[-0.653,-4.165],[2.08,-3.666],[3.283,1.949],[-0.957,6.452],[-5.769,4.81]],"v":[[-122.204,-7.53],[-126.411,-15.298],[-122.814,-22.91],[-115.389,-22.16],[-109.818,-16.776],[-108.54,-29.113],[-97.839,-32.892],[-94.356,-22.684],[-104.912,-2.859]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":2},{"ty":4,"nm":"Layer 8","sr":1,"st":75,"op":325,"ip":75,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[60.584,38.99,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0,0,100],"t":75},{"s":[100,100,100],"t":82.5}],"ix":6,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[316.584,294.99,0],"t":82.5,"ti":[-0.2,5.532,0],"to":[0.2,-5.532,0]},{"s":[317.784,261.8,0],"t":112.5}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[100],"t":108},{"s":[0],"t":112.5}],"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura","ix":1,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura 2","ix":2,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-1.915,4.328],[0.458,2.044],[2.082,0.229],[1.138,-1.414],[0.612,-1.709],[2.241,1.915],[1.871,-2.278],[-1.268,-2.35],[-4.373,-1.584]],"o":[[0.848,-1.916],[-0.458,-2.044],[-1.804,-0.199],[-1.138,1.414],[-0.563,-2.894],[-2.241,-1.915],[-1.695,2.063],[2.166,4.015],[4.938,1.789]],"v":[[71.6,41.438],[72.516,35.329],[68.338,31.181],[63.635,33.442],[61.253,38.309],[57.476,30.502],[49.54,30.565],[49.68,38.106],[61.342,48.628]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":3},{"ty":4,"nm":"Layer 7","sr":1,"st":0,"op":250,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-110.332,-17.276,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0,0,100],"t":37.5},{"s":[100,100,100],"t":45}],"ix":6,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[145.668,238.724,0],"t":45,"ti":[2.998,5.731,0],"to":[-2.998,-5.731,0]},{"s":[127.682,204.335,0],"t":75}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[100],"t":70.5},{"s":[0],"t":75}],"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura","ix":1,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura 2","ix":2,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[4.683,4.886],[0.38,2.971],[-2.688,1.322],[-2.219,-1.346],[-1.655,-2],[-2.08,3.666],[-3.625,-2.151],[0.56,-3.777],[5.109,-4.259]],"o":[[-2.073,-2.163],[-0.38,-2.972],[2.329,-1.146],[2.219,1.346],[-0.653,-4.165],[2.08,-3.666],[3.283,1.949],[-0.957,6.452],[-5.769,4.81]],"v":[[-122.204,-7.53],[-126.411,-15.298],[-122.814,-22.91],[-115.389,-22.16],[-109.818,-16.776],[-108.54,-29.113],[-97.839,-32.892],[-94.356,-22.684],[-104.912,-2.859]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":4},{"ty":4,"nm":"Layer 6","sr":1,"st":0,"op":250,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[60.584,38.99,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0,0,100],"t":0},{"s":[100,100,100],"t":7.5}],"ix":6,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[316.584,294.99,0],"t":7.5,"ti":[-0.2,5.532,0],"to":[0.2,-5.532,0]},{"s":[317.784,261.8,0],"t":37.5}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[100],"t":33},{"s":[0],"t":37.5}],"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura","ix":1,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura 2","ix":2,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-1.915,4.328],[0.458,2.044],[2.082,0.229],[1.138,-1.414],[0.612,-1.709],[2.241,1.915],[1.871,-2.278],[-1.268,-2.35],[-4.373,-1.584]],"o":[[0.848,-1.916],[-0.458,-2.044],[-1.804,-0.199],[-1.138,1.414],[-0.563,-2.894],[-2.241,-1.915],[-1.695,2.063],[2.166,4.015],[4.938,1.789]],"v":[[71.6,41.438],[72.516,35.329],[68.338,31.181],[63.635,33.442],[61.253,38.309],[57.476,30.502],[49.54,30.565],[49.68,38.106],[61.342,48.628]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":5},{"ty":4,"nm":"Layer 5","sr":1,"st":0,"op":250,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[10.666,-102.116,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[266.666,153.884,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.56,-0.63],[0.87,1.44],[0.78,-0.49],[0.71,0.6],[0.02,0.84],[-0.21,0.81],[0.08,1.37],[-1.34,0.25]],"o":[[-1.56,0.63],[0.21,0.9],[-0.79,0.49],[-0.64,-0.53],[-0.03,-0.83],[-0.95,0.99],[-0.16,-2.67],[2.26,1.89]],"v":[[6.63,-72.85],[2.23,-74.32],[1.24,-71.92],[-1.36,-72.11],[-2.31,-74.34],[-1.92,-76.8],[-5.41,-77.27],[2.47,-81]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":4,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.075,-0.282],[-0.524,-0.522],[-0.426,-0.114],[-0.422,0.022],[-0.945,0.308],[-1.449,1.385],[-0.065,0.38],[0.203,0.387],[0.03,0.045],[0.012,0.027],[0.669,-0.357],[2.982,0.584],[0.022,-0.762],[-0.017,-0.206]],"o":[[0.189,0.693],[0.303,0.304],[0.417,0.109],[0.998,-0.066],[1.908,-0.634],[0.256,-0.25],[0.09,-0.479],[-0.023,-0.046],[-0.011,-0.02],[-0.434,-0.582],[-2.701,1.477],[-0.741,-0.142],[-0.005,0.203],[0.026,0.291]],"v":[[4.648,-91.054],[5.714,-89.191],[6.881,-88.394],[8.262,-88.381],[11.19,-88.962],[16.339,-92.033],[16.829,-93.028],[16.662,-94.41],[16.579,-94.546],[16.538,-94.611],[14.481,-95.413],[5.54,-93.819],[4.476,-92.536],[4.492,-91.919]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[1,1,1],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.015,-0.697],[0,-0.015],[0.976,0.321],[0,0],[0.055,-0.015],[0,0],[-0.24,0.201],[0,0],[-0.087,-0.017],[0,0]],"o":[[0,0.015],[0.021,1.027],[0,0],[-0.054,-0.018],[0,0],[-0.303,0.082],[0,0],[0.068,-0.057],[0,0],[0.685,0.134]],"v":[[5.711,-115.734],[5.712,-115.69],[3.761,-114.24],[-1.55,-115.985],[-1.718,-115.99],[-5.203,-115.051],[-5.467,-115.558],[-2.139,-118.345],[-1.895,-118.407],[4.509,-117.156]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.348,-0.604],[0.007,-0.013],[-1.01,-0.187],[0,0],[-0.041,-0.039],[0,0],[0.114,0.292],[0,0],[0.084,0.027],[0,0]],"o":[[-0.007,0.013],[-0.511,0.891],[0,0],[0.056,0.01],[0,0],[0.227,0.217],[0,0],[-0.032,-0.082],[0,0],[-0.665,-0.211]],"v":[[18.51,-113.178],[18.488,-113.14],[19.503,-110.932],[25,-109.914],[25.149,-109.837],[27.756,-107.341],[28.231,-107.659],[26.649,-111.701],[26.465,-111.873],[20.247,-113.849]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[11.34,-112.835],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[11.34,-112.835],"t":12,"ti":[0,0],"to":[0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[10.915,-110.881],"t":18,"ti":[0,0],"to":[0,0]},{"s":[11.34,-112.835],"t":23}],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.006,-1.333],[-1.333,-0.006],[-0.006,1.333],[1.333,0.006]],"o":[[-0.006,1.333],[1.333,0.006],[0.006,-1.333],[-1.333,-0.006]],"v":[[19.677,-106.895],[22.079,-104.47],[24.504,-106.873],[22.101,-109.297]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.006,-1.333],[-1.333,-0.006],[-0.006,1.333],[1.333,0.006]],"o":[[-0.006,1.333],[1.333,0.006],[0.006,-1.333],[-1.333,-0.006]],"v":[[-2.988,-111.784],[-0.586,-109.36],[1.839,-111.762],[-0.564,-114.187]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[10.758,-109.328],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[100,100],"t":12},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[100,-5.586],"t":18},{"s":[100,100],"t":23}],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[10.758,-109.328],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":12},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[15],"t":18},{"s":[0],"t":23}],"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":14,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.424,-0.233],[-0.265,-0.149],[-3.34,-2.829],[-1.488,-1.595],[-0.303,-0.829],[0.223,-0.737],[1.3,2.288],[1.254,1.385],[1.426,1.238],[1.563,1.06],[0.267,-0.264],[0.176,1.65],[3.021,-0.984],[-0.322,-2.2],[3.071,1.937],[1.705,-0.559],[-0.161,-2.401],[-2.696,-1.994],[3.54,-0.221],[0.385,-3.526],[-3.409,-0.979],[0.056,-0.909],[-9.012,1.502]],"o":[[0.267,0.146],[3.81,2.149],[1.664,1.41],[0.592,0.635],[0.257,0.704],[0.762,-2.519],[-0.952,-1.675],[-1.268,-1.4],[-1.426,-1.238],[-0.435,-0.295],[1.18,-1.166],[-0.32,-3.011],[-2.114,0.689],[-1.32,-3.2],[-1.517,-0.957],[-2.807,0.92],[0.225,3.346],[-0.821,-3.45],[-3.54,0.221],[-0.385,3.526],[-0.056,0.909],[7.844,-4.684],[0.477,-0.08]],"v":[[15.693,-125.366],[16.491,-124.923],[27.281,-117.479],[32.022,-112.975],[33.633,-110.88],[34.145,-108.189],[33.037,-115.788],[29.47,-119.906],[25.424,-123.868],[20.936,-127.32],[16.182,-130.153],[17.799,-134.685],[11.706,-138.931],[8.47,-133.716],[2.72,-142.559],[-2.379,-143.289],[-5.707,-137.32],[-1.029,-128.769],[-8.899,-134.597],[-15.981,-127.834],[-10.523,-119.704],[-11.186,-115.537],[14.299,-125.605]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.137,-0.19],[0.026,-0.048],[0.283,-0.47],[0.61,-0.976],[0.848,-2.087],[-0.426,-0.603],[-0.349,-0.163],[-1.397,-0.079],[0.126,1.808],[0.405,4.399]],"o":[[-0.179,0.249],[-0.258,0.484],[-0.594,0.986],[-1.191,1.904],[-0.278,0.684],[0.223,0.315],[1.285,0.6],[1.392,0.079],[-0.308,-4.406],[-0.001,-0.013]],"v":[[11.281,-113.096],[10.863,-112.494],[10.035,-111.07],[8.212,-108.137],[4.971,-102.216],[4.861,-100.102],[5.798,-99.448],[10.065,-98.366],[12.754,-100.224],[11.537,-113.431]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.949,0.6863,0.6667],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.813,-7.27],[-0.953,-0.841],[-0.433,6.315],[0.107,-0.07]],"o":[[0.925,0.777],[0.433,-6.315],[-1.094,0.548],[-0.398,0.268]],"v":[[-12.966,-103.207],[-10.183,-100.876],[-8.878,-119.828],[-10.824,-120.545]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.509,-3.051],[-0.895,-1.188],[-0.875,2.307],[-0.065,0.163],[-0.795,1.84],[-0.036,0.064],[-0.002,1.387],[0.257,0.803],[0.234,0.394],[0.123,0.329],[0.56,-1.573],[0.643,-1.601]],"o":[[0.902,1.188],[0.741,-2.35],[0.057,-0.163],[0.71,-1.876],[0.022,-0.071],[0.006,-1.387],[0.001,-0.837],[-0.139,-0.436],[-0.189,-0.318],[0.618,1.651],[-0.579,1.625],[-1.268,3.158]],"v":[[26.226,-95.209],[29.351,-91.757],[31.772,-98.743],[31.951,-99.239],[34.217,-104.808],[34.303,-105.006],[34.322,-109.166],[33.917,-111.663],[33.354,-112.913],[32.609,-113.912],[32.226,-109.367],[30.393,-104.527]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 5","ix":5,"cix":2,"np":1,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[0,0],[0.92,-0.575],[1.076,-0.137],[3.563,0.382],[1.758,0.367],[1.412,0.271],[5.075,4.079],[0.195,0.164],[1.492,0.888]],"o":[[0.138,1.076],[-0.92,0.575],[-3.557,0.453],[-1.785,-0.192],[-1.436,-0.3],[-6.344,-1.216],[-0.199,-0.16],[-1.392,1.039],[0,0]],"v":[[36.067,-108.097],[34.583,-105.398],[31.483,-104.495],[20.755,-104.436],[15.437,-105.279],[11.266,-106.447],[-6.02,-114.07],[-6.61,-114.555],[-11.518,-114.299]]},"ix":2}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 6","ix":6,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.885,0.749],[0.556,-0.523],[0.384,-0.938],[0.039,-0.944],[-0.999,-1.021],[-0.572,-0.653],[-0.157,0.624],[-0.001,0.003],[-0.108,0.619],[-0.067,1.255]],"o":[[-0.709,-0.282],[-0.764,0.719],[-0.358,0.875],[-0.058,1.427],[0.609,0.622],[0.424,0.484],[0.001,-0.003],[0.145,-0.611],[0.217,-1.238],[0.083,-1.549]],"v":[[-14.744,-114.767],[-16.826,-114.306],[-18.26,-111.646],[-19.117,-108.961],[-17.261,-105.234],[-15.415,-103.371],[-14.028,-103.67],[-14.026,-103.678],[-13.645,-105.524],[-13.22,-109.269]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.949,0.6863,0.6667],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 7","ix":7,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.114,-0.057],[0.156,0.014],[-0.043,0.014]],"o":[[-0.149,-0.007],[0.114,-0.021],[0.028,-0.007]],"v":[[25.006,-79.595],[24.545,-79.623],[24.779,-79.673]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 8","ix":8,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-7.834,-0.326],[0.078,-0.021],[0.071,-0.021],[0.283,-0.043],[0.106,-0.021],[0.376,-0.057],[0.128,-0.021],[0.986,-0.142],[0.319,-0.043],[1.085,-0.156],[0.184,-0.028],[0.085,-0.014],[0.191,-0.028],[2.113,-0.291],[0.319,-0.043],[0.028,0],[0.291,-0.035],[0.418,-0.057],[0.177,-0.021],[0.39,-0.05],[0.149,-0.021],[0.234,-0.035],[0.085,-0.007],[0,0],[0,0],[-0.014,0.128],[0,0]],"o":[[-0.057,0.014],[-0.057,0.007],[-0.199,0.028],[-0.092,0.014],[-0.305,0.043],[-0.128,0.014],[-0.787,0.113],[-0.305,0.043],[-0.993,0.142],[-0.177,0.021],[-0.085,0.007],[-0.191,0.021],[-2.297,0.319],[-0.326,0.05],[-0.021,0],[-0.305,0.043],[-0.454,0.064],[-0.191,0.021],[-0.475,0.071],[-0.17,0.028],[-0.326,0.043],[-0.106,0.014],[-0.298,0.043],[0,0],[0,0],[0,0],[0,0]],"v":[[24.545,-79.623],[24.34,-79.58],[24.148,-79.545],[23.425,-79.431],[23.127,-79.382],[22.099,-79.226],[21.716,-79.169],[19.029,-78.779],[18.093,-78.645],[14.96,-78.198],[14.414,-78.12],[14.159,-78.084],[13.584,-78.006],[6.821,-77.071],[5.857,-76.936],[5.786,-76.929],[4.892,-76.808],[3.581,-76.624],[3.028,-76.553],[1.73,-76.376],[1.248,-76.305],[0.404,-76.191],[0.121,-76.156],[-0.34,-76.092],[-14.172,-91.839],[-14.151,-92.03],[2.696,-82.833]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 9","ix":9,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-1.158,-2.618],[-0.143,-1.129],[0.01,-2.088],[0.028,-0.043],[1.021,-2.864],[0.057,-0.163],[0.354,-1.014],[0.014,-0.036],[0.028,-0.078],[0.44,-1.269],[0.851,-2.276],[0.298,-0.603],[0.092,-0.036],[0.121,-0.021],[0.078,-0.021],[0.071,-0.014],[0.283,-0.043],[0.106,-0.014],[0.376,-0.057],[0.135,-0.021],[0.986,-0.142],[0.319,-0.043],[1.085,-0.156],[0.184,-0.028],[0.085,-0.014],[0.191,-0.028],[2.113,-0.291],[0.312,-0.043],[0.028,0],[0.291,-0.035],[0.418,-0.057],[0.177,-0.021],[0.39,-0.05],[0.149,-0.021],[0.234,-0.035],[0.085,-0.007],[0,0],[0,0],[-0.014,0.128],[-0.191,1.865],[-0.312,2.779],[-0.397,0.269],[-1.099,0.546],[-3.08,1.428],[-1.903,0.839],[-0.932,0.356],[-1.047,-0.02],[-1.684,-0.489],[-3.146,-2.797]],"o":[[0.429,0.97],[0.263,2.071],[-0.028,0.021],[-0.397,0.518],[-0.064,0.163],[-0.319,0.915],[-0.014,0.028],[-0.021,0.064],[-0.426,1.234],[-1.085,3.155],[-0.475,1.305],[-0.163,0.347],[-0.043,0.014],[-0.057,0.014],[-0.057,0.007],[-0.199,0.028],[-0.099,0.014],[-0.305,0.043],[-0.12,0.021],[-0.787,0.113],[-0.305,0.043],[-0.993,0.142],[-0.177,0.021],[-0.085,0.007],[-0.191,0.021],[-2.297,0.319],[-0.333,0.05],[-0.021,0],[-0.305,0.043],[-0.454,0.064],[-0.191,0.021],[-0.475,0.071],[-0.17,0.028],[-0.326,0.043],[-0.106,0.014],[-0.298,0.043],[0,0],[0,0],[0.05,-0.482],[0.22,-2.049],[0.815,-7.267],[0.106,-0.071],[3.043,-1.506],[1.887,-0.875],[0.912,-0.402],[0.983,-0.375],[1.749,0.034],[4.091,1.189],[2.196,1.952]],"v":[[33.266,-114.313],[34.145,-111.174],[34.3,-104.898],[34.215,-104.806],[31.954,-99.24],[31.77,-98.744],[30.756,-95.844],[30.72,-95.745],[30.649,-95.532],[29.352,-91.753],[26.353,-83.21],[25.162,-80.261],[24.779,-79.673],[24.545,-79.623],[24.34,-79.58],[24.148,-79.545],[23.425,-79.431],[23.127,-79.382],[22.099,-79.226],[21.716,-79.169],[19.029,-78.779],[18.093,-78.645],[14.96,-78.198],[14.414,-78.12],[14.159,-78.084],[13.584,-78.006],[6.821,-77.071],[5.857,-76.936],[5.786,-76.929],[4.892,-76.808],[3.581,-76.624],[3.028,-76.553],[1.73,-76.376],[1.248,-76.305],[0.404,-76.191],[0.121,-76.156],[-0.34,-76.092],[-14.172,-91.839],[-14.151,-92.03],[-13.775,-95.731],[-12.967,-103.21],[-10.769,-118.857],[-8.876,-119.829],[0.314,-124.22],[5.998,-126.796],[8.752,-127.989],[11.92,-128.252],[17.108,-127.53],[27.854,-120.989]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7961,0.5333,0.3608],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 10","ix":10,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[0,0],[0.752,0.802],[1.051,-0.323],[0.56,-0.769],[-0.661,-2.52],[-0.972,-1.036],[-2.082,-1.982]],"o":[[-0.41,-1.02],[-0.752,-0.802],[-0.91,0.279],[-1.534,2.106],[0.36,1.374],[1.967,2.097],[0,0]],"v":[[-10.824,-111.785],[-13.516,-115.721],[-16.483,-116.713],[-18.576,-114.849],[-21.066,-107.724],[-18.745,-104.207],[-12.67,-98.086]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7961,0.5333,0.3608],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 11","ix":11,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-2.016,-0.423],[-0.177,-0.755],[0.201,-1.01],[0.497,-0.821],[1.418,-0.303],[0.85,-0.232],[-0.217,0.616],[-0.001,0.003],[-0.256,0.585],[-0.648,1.1]],"o":[[0.758,0.159],[0.243,1.037],[-0.188,0.941],[-0.751,1.241],[-0.865,0.185],[-0.63,0.172],[0.001,-0.003],[0.22,-0.599],[0.511,-1.169],[0.799,-1.357]],"v":[[38.067,-104.068],[39.571,-102.509],[39.291,-99.454],[38.511,-96.701],[34.849,-94.587],[32.241,-94.046],[31.235,-95.077],[31.238,-95.085],[31.951,-96.861],[33.692,-100.269]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.949,0.6863,0.6667],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 12","ix":12,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[0,0],[-2.184,1.862],[-0.331,2.192],[3.36,0.916],[1.496,-1.189]],"o":[[2.859,-0.254],[1.687,-1.438],[0.4,-2.647],[-1.843,-0.503],[0,0]],"v":[[28.396,-91.067],[38.256,-93.51],[41.188,-99.32],[38.682,-106.881],[33.48,-103.911]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7961,0.5333,0.3608],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 13","ix":13,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.51,-6.941],[1.014,-2.347],[1.709,-1.106],[2.644,3.566],[3.623,2.559],[4.119,1.801],[3.999,-2.063],[-0.766,0.822],[-8.657,-1.872],[-1.106,-0.433],[0.688,-0.525],[-0.546,-1.659],[-2.581,-1.39]],"o":[[-0.191,2.559],[-1.29,1.553],[2.46,-3.694],[-2.637,-3.566],[-3.672,-2.595],[-4.119,-1.801],[0.617,-0.936],[6.083,-6.437],[1.163,0.248],[-0.823,0.035],[-1.382,1.056],[0.915,2.786],[6.118,3.304]],"v":[[39.27,-114.831],[37.413,-107.436],[32.904,-103.402],[31.302,-117.064],[21.163,-125.586],[9.841,-132.86],[-3.197,-133.193],[-0.354,-136.412],[23.872,-144.139],[27.282,-143.111],[24.97,-142.289],[23.524,-137.603],[30.316,-132.42]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.1529,0.1451,0.1529],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 14","ix":14,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[4.318,-5.232],[1.709,-1.106],[2.644,3.566],[3.623,2.559],[4.119,1.801],[3.999,-2.063],[-0.766,0.822],[-8.657,-1.872],[-1.106,-0.433],[-1.758,-7.473]],"o":[[-1.29,1.553],[2.46,-3.694],[-2.637,-3.566],[-3.672,-2.595],[-4.119,-1.801],[0.617,-0.936],[6.083,-6.437],[1.163,0.248],[7.153,2.751],[1.56,6.643]],"v":[[37.413,-107.436],[32.904,-103.402],[31.302,-117.064],[21.163,-125.586],[9.841,-132.86],[-3.197,-133.193],[-0.354,-136.412],[23.872,-144.139],[27.282,-143.111],[42,-126.635]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2627,0.2196,0.2902],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[4,-84],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[4,-84],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":0},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-22],"t":12},{"s":[0],"t":25}],"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.968,2.631],[-0.342,0.303],[-0.128,0.113],[0,0],[-0.543,4.145],[3.554,1.101],[1.012,-4.292]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.342,-0.303],[0.128,-0.12],[0,0],[0.036,-0.035],[-3.714,-0.208],[-1.019,4.285],[0,0]],"v":[[-2.142,-67.746],[-2.275,-67.556],[-5.573,-65.577],[0.156,-65.494],[3.011,-61.858],[4.809,-59.56],[10.603,-64.688],[11.635,-65.597],[12.02,-65.943],[12.148,-66.049],[14.183,-95.832],[3.388,-98.086],[-2.195,-68.009]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7961,0.5333,0.3608],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":6},{"ty":4,"nm":"Layer 4","sr":1,"st":0,"op":250,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[256,256,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0.498,-0.741],[0.51,-0.815],[0.397,-0.666],[1.314,-2.676],[0,0]],"o":[[0,0],[-0.517,0.722],[-0.539,0.794],[-0.411,0.652],[-1.502,2.501],[0,0],[1.027,-10.275]],"v":[[-21.007,-55.794],[-23.295,-52.733],[-24.821,-50.541],[-26.402,-48.123],[-27.614,-46.145],[-31.833,-38.374],[-31.833,-23.555]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.4549,0,0.2078],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.601,1.059],[1.319,-0.41],[3.299,-1.715],[-2.17,2.705],[0.16,0.963],[1.886,-0.675],[0.985,-4.405],[-0.853,6.826],[1.386,0.632],[0.971,-1.185],[-1.889,-7.469],[0.147,1.398],[0.701,1.24],[1.05,-0.997],[-0.203,-1.007],[-2.534,-5.767],[-6.108,5.713]],"o":[[-0.655,-1.154],[-3.578,1.113],[2.17,-2.705],[0.624,-0.777],[-0.312,-1.879],[-4.465,1.599],[0.853,-6.826],[0.18,-1.441],[-1.43,-0.652],[-4.978,6.079],[-1.383,-0.524],[-0.147,-1.398],[-0.701,-1.24],[-0.767,0.727],[1.233,6.133],[7.928,-3.155],[0.904,-0.846]],"v":[[77.428,103.566],[73.655,103.024],[63.309,107.278],[69.819,99.165],[70.94,96.529],[65.893,95.124],[56.961,104.963],[59.521,84.486],[58.288,80.591],[54.311,82.339],[49.344,104.122],[47.241,100.644],[46.488,96.524],[42.792,95.532],[42.359,98.453],[51.762,122.57],[76.18,106.701]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[51,122],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[41,122],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[-31],"t":0},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":25},{"s":[-31],"t":50}],"ix":6,"x":"var $bm_rt;\n$bm_rt = loopOut();"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.086,-0.834],[0.348,-0.681],[1.81,2.548],[-0.826,-3.229],[5.34,8.292],[2.514,-1.682],[-0.105,-1.311],[-5.849,-8.068],[2.337,0.085],[0.44,-1.2],[-1.017,-1.005],[-4.572,-2.58],[0,0],[-0.723,4.504]],"o":[[-0.622,0.477],[1.322,-2.802],[-3.031,1.695],[-2.713,-9.357],[-1.499,-2.328],[-1.138,0.761],[0.785,9.841],[-1.481,-1.544],[-1.346,-0.049],[-0.536,1.463],[3.676,3.635],[0,0],[2.441,-3.933],[0.21,-1.305]],"v":[[-69.334,101.05],[-70.819,102.809],[-71.62,94.028],[-75.46,102.601],[-86.289,75.458],[-93.175,72.283],[-94.759,75.683],[-82.101,102.074],[-87.552,98.813],[-90.662,100.633],[-89.128,104.328],[-76.681,113.707],[-69.81,118.777],[-66.822,102.414]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[-70.5,117.5],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-70.5,117.5],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":0},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[40],"t":25},{"s":[0],"t":50}],"ix":6,"x":"var $bm_rt;\n$bm_rt = loopOut();"},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.363,0.831],[0,0],[0,0],[0,0],[0,0],[0,0],[0.007,-0.007],[3.751,-4.793],[0.128,-0.177],[1.092,-1.623],[0.51,-0.815],[0.397,-0.666],[2.219,-5.509],[1.17,-3.821],[0.156,-0.51],[0.631,-2.623],[0.106,-0.447],[0.794,-4.58],[-4.424,-0.567],[-1.489,-0.021],[-10.287,2.907],[-0.17,1.148],[-0.759,3.006],[-0.376,1.411],[-0.149,0.454],[-0.525,1.326],[-0.44,1.382],[-0.128,0.482],[-0.277,1.042],[-1.021,3.779],[-0.003,0.012]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[-0.007,0.007],[-4.715,3.906],[-0.135,0.17],[-1.191,1.531],[-0.539,0.794],[-0.411,0.652],[-2.921,4.864],[-1.439,3.58],[-0.156,0.503],[-0.744,2.517],[-0.106,0.432],[-1.028,4.537],[-0.057,0.333],[8.252,1.056],[10.677,0.142],[-0.22,0.064],[0.44,-3.07],[0.354,-1.418],[0.128,-0.468],[0.44,-1.375],[0.518,-1.319],[0.149,-0.468],[0.276,-1.042],[1.007,-3.779],[0.003,-0.012],[0.391,-1.548]],"v":[[27.453,-56.874],[11.798,-66.422],[6.381,-67.088],[-1.637,-67.804],[-8.366,-68.4],[-8.833,-68.442],[-8.848,-68.428],[-21.007,-55.794],[-21.404,-55.277],[-24.821,-50.541],[-26.402,-48.123],[-27.614,-46.145],[-35.314,-30.569],[-39.227,-19.459],[-39.688,-17.942],[-41.751,-10.229],[-42.07,-8.91],[-44.537,4.823],[-36.866,6.269],[-14.973,8.495],[16.697,4.355],[17.058,-7.839],[18.923,-16.943],[20.029,-21.182],[20.44,-22.572],[21.915,-26.592],[23.389,-30.619],[23.808,-32.037],[24.637,-35.156],[29.197,-52.846],[29.207,-52.883]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.5569,0,0.1843],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.559,-20.759],[0,0],[0.489,-7.501],[0.071,0.929],[-2.666,13.903],[-0.383,1.68],[-0.262,1.049]],"o":[[0,0],[-0.837,13.052],[-0.071,-1.049],[-1.092,-14.116],[0.326,-1.694],[0.234,-1.056],[3.119,20.823]],"v":[[-11.322,69.311],[-12.272,23.327],[-14.619,59.889],[-14.831,56.911],[-12.456,14.635],[-11.393,9.566],[-10.648,6.404]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.251,0.0235,0.0549],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 5","ix":5,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0.227,-3.58],[0.34,-5.346],[0.489,-7.501],[0.028,-0.312],[0.461,-5.19],[0.085,-0.922],[8.741,6.04],[-0.9,4.268],[-0.312,1.836],[0,0],[0,0]],"o":[[-0.014,0.17],[-0.234,3.559],[-0.837,13.052],[-0.163,2.368],[-0.461,5.119],[-0.206,2.212],[-10.436,1.985],[0.425,-2.51],[0.659,-3.12],[0,0],[0,0],[0,0]],"v":[[-11.003,3.533],[-11.393,9.566],[-12.272,23.327],[-14.619,59.889],[-14.909,64.086],[-16.54,99.804],[-16.987,104.703],[-47.976,98.088],[-45.665,86.702],[-39.709,0.675],[-25.005,-1.253],[-11.513,3.355]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.3608,0.051,0.0824],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 6","ix":6,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[6.508,2.07],[-4.772,1.872],[-0.659,0.22],[-0.057,-0.135],[-0.021,-0.05]],"o":[[-5.083,-4.573],[4.31,-2.588],[0.659,-0.255],[0.057,0.135],[0.014,0.05],[0,0]],"v":[[14.605,17.804],[-2.814,7.276],[11.011,0.002],[12.982,-0.714],[13.145,-0.317],[13.201,-0.175]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.251,0.0235,0.0549],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 7","ix":7,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.617,-3.091],[11.329,1.957],[-0.191,1.489],[-0.156,3.58],[0,0.071],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.057,-0.312],[-0.255,-1.992]],"o":[[-9.756,6.083],[0.057,-1.432],[0.475,-3.729],[0,-0.071],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.05,0.284],[0.262,1.496],[0.603,4.658]],"v":[[20.816,98.939],[-12.683,104.732],[-12.286,100.336],[-10.932,89.191],[-10.918,88.978],[-11.322,69.311],[-12.272,23.327],[-12.456,14.635],[-12.683,3.533],[-11.513,3.355],[11.011,0.002],[13.145,-0.317],[13.187,-0.324],[13.201,-0.175],[14.605,17.804],[18.058,61.86],[18.221,62.753],[19.001,85.823]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.3608,0.051,0.0824],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 8","ix":8,"cix":2,"np":7,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.107,-0.1],[-0.17,0.356]],"o":[[-0.068,0.506],[-0.114,0.099]],"v":[[-57.289,134.064],[-56.963,133.772]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.6549,0.0745,0.4039],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.031,-0.007],[-0.075,0.041],[-0.201,0.154],[-0.243,0.168],[-3.122,0.182],[-3.752,-0.665],[-1.661,0.855],[4.78,-0.111],[2.297,-1.005],[0.704,-0.656],[-0.364,1.052],[-0.131,1.489],[0.061,0.757],[0.438,-0.014],[0.285,-0.193],[0.208,-0.229],[-0.054,-0.357],[0.004,-0.683],[0.409,-1.265],[0.306,-1.013],[0.243,-1.011],[-0.157,-0.109]],"o":[[0.082,0.019],[0.217,-0.119],[0.235,-0.18],[2.559,-1.765],[3.808,-0.221],[1.478,-1.138],[-4.763,-0.38],[-2.504,0.054],[-0.876,0.389],[0.486,-1],[0.488,-1.41],[0.067,-0.756],[-0.031,-0.381],[-0.347,0.011],[-0.257,0.174],[-0.252,0.278],[0.103,0.675],[-0.008,1.329],[-0.326,1.007],[-0.3,0.994],[-0.045,0.186],[0.027,0.018]],"v":[[-56.851,133.558],[-56.603,133.517],[-56.014,132.987],[-55.297,132.466],[-46.533,129.289],[-35.343,130.396],[-30.707,127.225],[-45.025,126.817],[-52.393,128.023],[-54.804,129.607],[-53.515,126.533],[-52.543,122.171],[-52.528,119.896],[-52.944,119.306],[-53.913,119.648],[-54.598,120.27],[-54.757,120.994],[-54.612,123.037],[-55.233,126.966],[-56.247,129.975],[-57.023,132.989],[-56.938,133.52]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.6549,0.0745,0.4039],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[1.07,-2.985],[0.435,0.443],[1.036,3.017],[-0.613,1.3]],"o":[[-0.832,2.372],[-0.453,-0.417],[-2.245,-2.296],[0.822,-2.131],[0,0]],"v":[[-26.696,101.799],[-29.774,110.413],[-31.108,109.13],[-36.269,101.084],[-34.057,95.703]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.949,0.6863,0.6667],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.58,-2.068],[-3.671,0.004],[-2.637,-0.5],[-0.913,0.828],[-0.148,0.144],[1.621,0.234],[1.215,0.064],[3.286,-1.601],[0.632,2.675],[0.734,-0.452],[0.202,-1.439]],"o":[[3.069,-2.01],[2.684,-0.009],[1.054,-0.702],[0.154,-0.137],[-1.611,-0.361],[-1.199,-0.177],[-3.652,-0.187],[1.295,-2.429],[-0.73,0.481],[0.17,1.44],[-0.288,2.129]],"v":[[-55.465,130.791],[-44.971,127.998],[-36.99,128.871],[-34.018,126.576],[-33.567,126.151],[-38.443,125.283],[-42.063,124.914],[-52.748,126.788],[-51.728,118.777],[-53.928,120.175],[-54.016,124.527]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.949,0.6863,0.6667],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 5","ix":5,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.005,-0.672],[-0.585,-0.537],[-1.828,-0.662],[-1.535,-0.344],[-1.406,0.189],[-1.148,0.603],[-1.697,1.122],[-0.913,0.828],[-0.148,0.144],[-0.1,0.108],[-0.566,1.805],[1.489,1.683],[-0.571,1.575],[-0.837,2.376],[0,0],[0.818,-2.129],[1.068,-2.288],[3.155,-2.113],[0.628,-0.409],[0.734,-0.452],[0.728,-0.409],[1.048,-1.239]],"o":[[-0.007,0.793],[1.433,1.303],[1.48,0.537],[1.361,0.306],[1.281,-0.163],[1.756,-0.921],[1.054,-0.702],[0.154,-0.137],[0.099,-0.101],[1.335,-1.35],[0.662,-2.143],[0.441,-1.25],[1.07,-2.989],[0,0],[-0.612,1.298],[-1.453,3.76],[-3.168,1.789],[-0.621,0.417],[-0.73,0.481],[-0.726,0.446],[-1.411,0.803],[-0.441,0.513]],"v":[[-60.763,126.647],[-59.626,128.654],[-54.606,131.53],[-50.054,132.783],[-45.88,133.233],[-42.257,131.892],[-36.99,128.871],[-34.018,126.576],[-33.567,126.151],[-33.266,125.834],[-30.229,121.101],[-31.322,114.75],[-29.777,110.416],[-26.692,101.798],[-34.06,95.706],[-36.268,101.081],[-40.39,111.447],[-49.858,117.542],[-51.728,118.777],[-53.928,120.175],[-56.105,121.461],[-59.892,124.862]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7961,0.5333,0.3608],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 6","ix":6,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-2.488,-0.727],[-0.852,-0.202],[-1.703,0.4],[-1.459,1.183],[-2.235,1.813],[-0.238,2.642],[1.909,1.331],[2.924,-0.708],[0.948,-0.64],[3.483,-2.351],[-0.735,-3.457],[-1.042,-0.6]],"o":[[0.842,0.246],[1.702,0.404],[1.829,-0.429],[2.235,-1.813],[2.06,-1.671],[0.209,-2.318],[-2.38,-1.66],[-1.112,0.269],[-3.483,2.351],[-2.215,1.495],[0.25,1.176],[2.243,1.291]],"v":[[-51.74,134.774],[-49.197,135.444],[-44.009,135.778],[-39.194,132.948],[-32.49,127.509],[-27.968,121.233],[-31.135,115.372],[-40.274,112.988],[-43.307,114.549],[-53.756,121.605],[-61.271,129.249],[-58.895,131.816]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2941,0.0392,0.3843],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 7","ix":7,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.072,-0.729],[0,0],[-0.335,-0.294],[-5.947,-0.392],[-0.292,0.156],[-4.321,3.646],[-0.664,1.057],[0.357,1.551],[0.828,0.81],[0.593,-0.047],[0.586,-0.311],[3.097,-0.978],[2.718,-0.859],[3.608,-1.14],[0.048,-0.015]],"o":[[0,0],[0.044,0.444],[4.034,3.548],[0.33,0.022],[5.019,-2.682],[0.954,-0.805],[0.847,-1.347],[-0.26,-1.13],[-0.414,-0.405],[-0.675,0.053],[-2.874,1.525],[-2.718,0.859],[-3.608,1.14],[-0.048,0.015],[-0.699,0.221]],"v":[[-61.146,130.501],[-60.956,132.422],[-60.319,133.533],[-45.104,139.017],[-44.147,138.846],[-30.611,128.884],[-28.022,126.198],[-27.246,121.611],[-28.932,118.625],[-30.305,117.892],[-32.209,118.606],[-40.949,122.83],[-49.104,125.406],[-59.927,128.825],[-60.827,127.743]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.6549,0.0745,0.4039],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 9","ix":9,"cix":2,"np":7,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.092,-0.113],[0.121,0.376]],"o":[[0,0.51],[0.099,0.113]],"v":[[34.237,137.791],[33.953,137.458]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.6549,0.0745,0.4039],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.031,-0.003],[0.069,0.051],[0.179,0.18],[0.219,0.199],[3.069,0.599],[3.807,-0.156],[1.531,1.071],[-4.722,-0.751],[-2.141,-1.305],[-0.61,-0.744],[0.22,1.092],[-0.07,1.493],[-0.162,0.742],[-0.432,-0.073],[-0.256,-0.23],[-0.175,-0.255],[0.102,-0.346],[0.087,-0.677],[-0.236,-1.309],[-0.167,-1.045],[-0.105,-1.034],[0.17,-0.087]],"o":[[-0.083,0.007],[-0.199,-0.147],[-0.208,-0.21],[-2.3,-2.092],[-3.743,-0.73],[-1.312,-1.326],[4.771,0.262],[2.474,0.39],[0.815,0.503],[-0.347,-1.056],[-0.295,-1.463],[0.035,-0.758],[0.082,-0.374],[0.343,0.058],[0.231,0.207],[0.213,0.31],[-0.192,0.655],[-0.17,1.318],[0.187,1.042],[0.164,1.025],[0.019,0.19],[-0.029,0.015]],"v":[[33.87,137.23],[33.63,137.156],[33.118,136.552],[32.477,135.94],[24.219,131.616],[12.982,131.212],[8.813,127.447],[23.056,128.964],[30.195,131.148],[32.372,133.041],[31.507,129.822],[31.129,125.369],[31.42,123.112],[31.911,122.583],[32.826,123.052],[33.421,123.761],[33.481,124.499],[33.064,126.504],[33.152,130.481],[33.753,133.599],[34.117,136.69],[33.961,137.205]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.6549,0.0745,0.4039],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[-0.66,-3.101],[-0.491,0.381],[-1.431,2.851],[0.433,1.37]],"o":[[0.506,2.462],[0.505,-0.352],[2.533,-1.974],[-0.529,-2.221],[0,0]],"v":[[8.249,101.714],[10.144,110.662],[11.638,109.57],[17.832,102.289],[16.361,96.66]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.949,0.6863,0.6667],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.298,-2.127],[3.637,0.496],[2.68,-0.142],[0.794,0.943],[0.128,0.163],[-1.638,0.014],[-1.212,-0.099],[-3.041,-2.028],[-0.985,2.566],[-0.666,-0.546],[-0.007,-1.453]],"o":[[-2.772,-2.403],[-2.659,-0.369],[-0.95,-0.837],[-0.135,-0.156],[1.645,-0.142],[1.212,-0.014],[3.644,0.305],[-0.957,-2.581],[0.659,0.574],[-0.362,1.404],[0,2.148]],"v":[[32.868,134.303],[22.844,130.127],[14.818,129.921],[12.181,127.249],[11.791,126.766],[16.739,126.561],[20.376,126.681],[30.713,129.971],[30.777,121.896],[32.769,123.576],[32.273,127.901]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.949,0.6863,0.6667],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 5","ix":5,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.085,-0.666],[0.652,-0.454],[1.9,-0.411],[1.567,-0.135],[1.368,0.376],[1.056,0.751],[1.531,1.34],[0.794,0.943],[0.128,0.163],[0.085,0.121],[0.319,1.865],[-1.701,1.467],[0.354,1.638],[0.51,2.467],[0,0],[-0.525,-2.219],[-0.752,-2.411],[-2.843,-2.517],[-0.567,-0.489],[-0.666,-0.546],[-0.666,-0.503],[-0.872,-1.368]],"o":[[-0.099,0.787],[-1.595,1.099],[-1.539,0.333],[-1.39,0.12],[-1.248,-0.333],[-1.617,-1.149],[-0.95,-0.837],[-0.135,-0.156],[-0.085,-0.113],[-1.142,-1.517],[-0.369,-2.212],[-0.269,-1.297],[-0.659,-3.105],[0,0],[0.432,1.368],[0.936,3.921],[2.9,2.198],[0.56,0.496],[0.659,0.574],[0.659,0.539],[1.29,0.985],[0.369,0.567]],"v":[[38.675,130.907],[37.278,132.743],[31.918,134.92],[27.239,135.551],[23.042,135.437],[19.632,133.622],[14.818,129.921],[12.181,127.249],[11.791,126.766],[11.535,126.412],[9.16,121.314],[11.096,115.168],[10.146,110.666],[8.246,101.711],[16.364,96.663],[17.831,102.286],[20.525,113.112],[29.09,120.421],[30.777,121.896],[32.769,123.576],[34.754,125.143],[38.051,129.021]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7961,0.5333,0.3608],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 6","ix":6,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[2.563,-0.387],[0.871,-0.086],[1.634,0.624],[1.287,1.368],[1.971,2.096],[-0.118,2.651],[-2.07,1.063],[-2.803,-1.094],[-0.854,-0.761],[-3.136,-2.797],[1.192,-3.327],[1.113,-0.454]],"o":[[-0.867,0.131],[-1.741,0.172],[-1.755,-0.67],[-1.971,-2.096],[-1.818,-1.933],[0.104,-2.325],[2.581,-1.326],[1.065,0.416],[3.136,2.797],[1.994,1.779],[-0.405,1.132],[-2.396,0.978]],"v":[[28.643,137.75],[26.033,138.073],[20.846,137.708],[16.455,134.258],[10.541,127.968],[6.902,121.142],[10.827,115.759],[20.203,114.623],[23,116.576],[32.407,124.97],[38.828,133.554],[36.13,135.778]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2941,0.0392,0.3843],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 7","ix":7,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.17,-0.713],[0,0],[0.371,-0.247],[5.946,0.409],[0.268,0.194],[3.793,4.193],[0.517,1.137],[-0.562,1.489],[-0.929,0.692],[-0.581,-0.126],[-0.539,-0.387],[-2.938,-1.385],[-2.578,-1.216],[-3.422,-1.613],[-0.046,-0.021]],"o":[[0,0],[-0.103,0.434],[-4.473,2.975],[-0.33,-0.023],[-4.614,-3.331],[-0.838,-0.926],[-0.659,-1.449],[0.409,-1.085],[0.464,-0.346],[0.662,0.143],[2.643,1.897],[2.578,1.215],[3.422,1.613],[0.046,0.021],[0.663,0.312]],"v":[[38.537,134.777],[38.091,136.656],[37.311,137.671],[21.497,141.065],[20.572,140.767],[8.495,129.078],[6.29,126.07],[6.137,121.42],[8.208,118.687],[9.667,118.145],[11.458,119.108],[19.552,124.466],[27.287,128.113],[37.554,132.953],[38.59,132.001]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.6549,0.0745,0.4039],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 10","ix":10,"cix":2,"np":8,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[0,0],[2.186,1.571],[-1.104,-0.282],[0,0],[0.87,0.675],[0,0],[-0.835,0.192],[-0.658,-0.066],[0.097,0.643],[0,0],[-0.588,-0.921],[0,0],[-0.242,0.842],[-0.496,1.019],[0.355,-1.158],[0.004,-0.013],[-1.163,-0.763],[-1.009,0.773],[-0.072,-0.781],[0.661,-1.824]],"o":[[-2.728,-0.33],[-0.91,-0.654],[0,0],[1.087,0.278],[0,0],[-0.663,-0.515],[0.643,-0.148],[0.685,0.069],[0,0],[-0.16,-1.064],[0,0],[0.477,0.747],[0.311,-1.082],[0.533,-1.096],[-0.004,0.013],[-0.394,1.283],[1.001,0.656],[0.645,-0.494],[0.176,1.92],[0,0]],"v":[[-117.601,128.493],[-125.135,125.553],[-124.217,123.817],[-122.809,124.177],[-121.87,122.464],[-125.346,119.765],[-124.936,118.041],[-122.965,117.917],[-121.8,116.805],[-122.189,114.226],[-120.255,113.579],[-116.596,119.315],[-114.693,119.058],[-113.481,115.9],[-111.532,116.593],[-111.544,116.632],[-110.945,120.329],[-107.755,119.767],[-106.065,120.484],[-106.796,126.183]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[0,0],[-2.84,3.56],[-0.37,-0.086],[0.027,-0.438],[0.132,-2.173],[-0.861,-0.024],[-0.274,0.258],[-0.819,0.429],[-0.307,-0.835],[0.584,-0.565],[1.917,-1.853],[-0.095,0.217]],"o":[[-0.756,-4.396],[0.229,-0.287],[0.452,0.105],[-0.132,2.173],[-0.049,0.811],[0.387,0.011],[0.664,-0.624],[0.819,-0.429],[0.274,0.745],[-1.917,1.853],[0.095,-0.217],[0,0]],"v":[[92.042,144.185],[95.349,131.561],[96.278,131.048],[96.773,132.161],[96.378,138.681],[97.408,140.622],[98.409,140.128],[100.421,138.295],[102.819,138.837],[101.876,140.894],[96.125,146.454],[96.408,145.802]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-3.288,3.061],[-6.6,-1.689],[2.88,-0.339],[4.199,0.411]],"o":[[5.462,3.878],[-2.649,-0.678],[-4.169,0.49],[-10.319,-1.01]],"v":[[84.627,144.782],[102.942,153.235],[91.438,155.175],[78.316,155.977]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.102,0.3765,0.0078],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[54.304,163.231],[86.541,134.314],[110.002,152.633],[101.69,160.397]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 5","ix":5,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[19.588,-16.098],[2.136,0.355],[-18.732,16.291]],"o":[[-19.227,16.513],[-1.964,-0.318],[18.732,-16.283],[0,0]],"v":[[69.625,119.57],[11.364,168.301],[5.198,167.287],[61.394,118.43]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.102,0.3765,0.0078],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 6","ix":6,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[15.048,-16.513],[1.924,0.326],[-14.381,16.646]],"o":[[-14.695,16.838],[-2.011,-0.34],[14.365,-16.646],[0,0]],"v":[[30.056,114.093],[-14.609,163.994],[-20.516,162.994],[22.603,113.057]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.102,0.3765,0.0078],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 7","ix":7,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-3.102,-0.452],[24.253,-12.427],[0,0],[-22.816,12.464]],"o":[[-23.955,13.027],[0,0],[22.808,-12.464],[3.605,0.489]],"v":[[-17.445,107.913],[-89.764,145.867],[-96.165,143.847],[-27.726,106.455]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.102,0.3765,0.0078],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 8","ix":8,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[10.108,1.665],[2.136,0.355],[6.589,1.103],[1.924,0.326],[1.178,0.414],[-2.639,1.895],[0,0],[0,0],[0,0],[0,0],[-2.34,1.317],[-9.621,-1.317],[-3.102,-0.452],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[-1.964,-0.318],[-6.315,-1.044],[-2.011,-0.34],[-12.378,-2.095],[-3.22,-1.14],[2.631,-1.902],[0,0],[0,0],[0,0],[0,0],[1.155,-0.644],[3.605,0.489],[5.411,0.807],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[86.542,121.916],[28.878,171.166],[11.364,168.301],[5.198,167.287],[-14.609,163.994],[-20.516,162.994],[-44.219,158.694],[-16.699,131.856],[-55.434,156.696],[-89.764,145.867],[-96.165,143.847],[-131.83,132.589],[-48.28,104.656],[-27.726,106.455],[-17.445,107.913],[-8.098,109.341],[-11.994,120.895],[8.819,111.147],[22.603,113.057],[30.056,114.093],[61.394,118.43],[69.625,119.57]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2118,0.2,0.2314],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":7},{"ty":4,"nm":"Layer 3","sr":1,"st":0,"op":250,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-9.315,-68.471,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[246.685,187.529,0],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":0},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-24],"t":25},{"s":[0],"t":50}],"ix":10,"x":"var $bm_rt;\n$bm_rt = loopOut();"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[2.035,-0.638],[7.267,-2.283],[-5.516,0.376],[-1.461,0.198],[-0.035,0.005],[-1.577,0.962],[-1.096,1.401]],"o":[[-7.267,2.276],[5.587,0.461],[1.496,-0.099],[0.035,-0.005],[1.908,-0.258],[0.087,-2.683],[-2.035,0.638]],"v":[[-21.871,-55.319],[-43.672,-48.485],[-26.87,-48.166],[-22.438,-48.605],[-22.333,-48.619],[-17.07,-50.497],[-15.774,-57.234]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.4549,0,0.2078],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.708,-3.127],[0.206,6.402],[-1.368,-2.162],[-1.524,-0.248]],"o":[[2.035,-6.069],[1.787,4.02],[1.269,0.262],[-4.162,2.51]],"v":[[-48.373,-62.962],[-45.615,-81.863],[-40.744,-72.2],[-36.54,-71.434]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.4549,0,0.2078],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[-8.697,-0.587],[0,0],[0,0],[0,0],[10.137,1.795],[2.241,8.076],[5.239,-3.419],[0.025,-0.015],[0.641,-0.461]],"o":[[5.305,-5.223],[0,0],[0,0],[0,0],[-9.988,-0.398],[-4.475,-7.093],[-6.504,-0.378],[-0.025,0.015],[-0.691,0.49],[0,0]],"v":[[-80.584,-97.55],[-58.536,-104.893],[-40.747,-72.203],[-9.302,-68.487],[-9.302,-68.487],[-40.747,-72.203],[-55.677,-108.538],[-73.786,-103.903],[-73.856,-103.853],[-75.854,-102.417]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2549,0.0039,0.098],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.163,0.007],[7.855,1.29],[1.269,0.262],[1.787,4.02],[1.56,5.608],[5.232,-3.417],[0.021,-0.014],[0.638,-0.51],[1.383,-1.843],[0.199,-0.284],[-7.721,-10.557],[-4.431,-0.362],[-5.516,0.376],[-1.461,0.198],[-0.035,0.005],[-1.177,5.822],[0,0]],"o":[[-8.621,-0.539],[-1.524,-0.248],[-1.368,-2.162],[-4.069,-9.139],[-6.508,-0.383],[-0.028,0.014],[-0.695,0.44],[-1.751,1.397],[-0.213,0.276],[5.374,11.918],[4.126,0.447],[5.587,0.461],[1.496,-0.099],[0.035,-0.005],[5.886,-0.797],[0,0],[-0.156,-0.007]],"v":[[-9.315,-68.471],[-36.54,-71.434],[-40.744,-72.2],[-45.615,-81.863],[-55.675,-108.535],[-73.783,-103.905],[-73.853,-103.856],[-75.853,-102.416],[-80.581,-97.553],[-81.198,-96.709],[-56.59,-49.796],[-43.672,-48.485],[-26.87,-48.166],[-22.438,-48.605],[-22.333,-48.619],[-10.585,-59.781],[-8.833,-68.442]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.5569,0,0.1843],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 5","ix":5,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.105,-0.672],[-0.383,-1.787],[0.121,-0.378],[-1.563,-3.258],[-1.426,-1.492],[-0.865,-0.547],[-0.426,-0.801],[-0.178,-0.616],[-0.6,-1.208],[-0.045,-0.073],[-2.765,-4.113],[-0.068,-0.094],[0,0],[1.123,1.365],[0.105,0.12],[1.074,1.579],[-0.017,0.824],[-0.327,0.672],[2.684,3.075],[0.585,-0.002],[-0.051,-0.992],[0.364,-0.92],[1.455,4.535],[0.122,-1.717],[-0.072,-1.812],[2.107,-1.131]],"o":[[-0.274,1.805],[-0.39,0.017],[-1.13,3.429],[0.887,1.857],[0.705,0.736],[0.691,0.436],[0.305,0.565],[0.357,1.306],[0.036,0.077],[2.203,4.434],[0.068,0.094],[0,0],[-1.235,-1.265],[-0.107,-0.113],[-1.208,-1.479],[-0.456,-0.677],[0.022,-0.741],[1.793,-3.667],[-0.393,-0.443],[-0.989,0.015],[0.053,0.985],[-1.455,-4.535],[-0.479,-1.49],[-0.119,1.733],[-0.139,-1.588],[-0.598,0.317]],"v":[[-82.686,-129.929],[-82.52,-124.477],[-83.255,-123.654],[-82.344,-113.124],[-78.803,-108.09],[-76.444,-105.933],[-74.637,-104.578],[-74.035,-102.755],[-72.473,-99.024],[-72.356,-98.797],[-64.8,-86.189],[-64.605,-85.901],[-59.849,-96.696],[-63.392,-100.635],[-63.699,-100.994],[-67.125,-105.594],[-68.036,-107.842],[-67.279,-109.925],[-68.8,-121.384],[-70.269,-122.261],[-71.714,-120.029],[-71.768,-117.278],[-75.985,-131.624],[-78.104,-131.762],[-77.699,-126.068],[-81.782,-131.664]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7961,0.5333,0.3608],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":8},{"ty":4,"nm":"Layer 2","sr":1,"st":0,"op":250,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[28.603,-55.794,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[284.603,200.206,0],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":0},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[16],"t":11},{"s":[0],"t":14}],"ix":10,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura","ix":1,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"mn":"Pseudo/Duik Kleaner v3.2","nm":"Ålosilo pli pura 2","ix":2,"en":1,"ef":[{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0001","nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0002","nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0003","nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0004","nm":"Anticipation","ix":4,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0005","nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0006","nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0007","nm":"","ix":7,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0008","nm":"Interpolation","ix":8,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0009","nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0010","nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0011","nm":"","ix":11,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0012","nm":"Follow Through","ix":12,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0013","nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0014","nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0015","nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0016","nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0017","nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0018","nm":"","ix":18,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0019","nm":"Spatial Options","ix":19,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0020","nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0021","nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0022","nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0023","nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0024","nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0025","nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0026","nm":"","ix":26,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0027","nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"mn":"Pseudo/Duik Kleaner v3.2-0028","nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0029","nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0030","nm":"","ix":30,"v":0},{"ty":6,"mn":"Pseudo/Duik Kleaner v3.2-0031","nm":"","ix":31,"v":0},{"ty":0,"mn":"Pseudo/Duik Kleaner v3.2-0032","nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":4,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[167.22,-79.088],[166.83,-78.521],[105.979,-74.246],[85.71,-41.357],[104.356,-77.21]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2902,0.0157,0.1176],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.213,-0.324],[1.375,2.324],[-2.295,1.422],[-1.066,-2.248],[-1.404,0.432],[-1.028,-1.05],[0.331,-1.251],[0.916,-0.915]],"o":[[-2.343,-1.341],[-1.375,-2.324],[2.115,-1.311],[1.157,-0.905],[1.404,-0.432],[0.905,0.925],[-0.331,1.251],[-2.284,2.282]],"v":[[124.904,-2.855],[118.739,-7.959],[119.838,-15.183],[126.104,-13.069],[130.009,-15.151],[134.126,-14.374],[134.918,-10.747],[132.865,-7.505]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7686,0.1725,0.3294],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":3,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.167,-0.277],[0,0],[-0.248,-0.003],[0,0],[-1.533,1.496],[-0.732,1.178],[2.859,0.02],[0,0]],"o":[[0,0],[-0.134,0.222],[0,0],[2.687,0.037],[1.32,-1.468],[2.463,-3.968],[0,0],[-0.184,-0.001]],"v":[[139.86,-67.079],[132.963,-55.647],[133.134,-55.31],[133.156,-55.31],[139.484,-57.493],[142.564,-61.465],[141.99,-67.481],[140.386,-67.492]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 2","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-1.949,0.192],[-0.856,-0.005],[4.39,-6.931],[0,0],[3.034,-1.059],[4.033,0.064],[0,0],[-0.295,0.5],[0,0],[-0.019,0.033]],"o":[[1.047,-0.123],[6.449,0.031],[0,0],[-2.524,3.985],[-2.185,0.908],[0,0],[-1.417,-0.022],[0,0],[0.011,-0.027],[0.344,-0.581]],"v":[[140.609,-71.138],[143.461,-71.315],[146.499,-60.769],[146.305,-60.462],[137.979,-52.928],[128.651,-51.662],[128.502,-51.665],[126.82,-52.446],[137.126,-69.887],[137.172,-69.977]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7686,0.1725,0.3294],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-5.516,0.351],[-0.079,-0.001],[0.601,-1.175],[0.022,-0.04],[2.099,-0.34],[0.142,-0.241],[0,0],[1.727,-3.143],[0,0],[-0.198,-0.003],[0,0],[0.445,-0.766],[0,0],[3.388,0.053],[0.238,0.01],[0,0],[-0.585,1.063],[0,0],[-1.848,0.232],[-0.044,0.079],[-0.947,1.696],[0,0],[0.097,0],[0.029,-0.007],[0.15,0.001],[0,0],[-0.123,0.515],[-0.111,0.202],[-0.239,0.282]],"o":[[0.088,-0.006],[1.084,0.005],[-0.018,0.039],[-0.433,0.746],[-0.132,0.051],[0,0],[-1.013,1.775],[0,0],[-0.094,0.165],[0,0],[0.866,0.012],[0,0],[-0.751,1.293],[-0.228,-0.003],[0,0],[-0.753,-0.06],[0,0],[0.373,-0.677],[0.069,-0.004],[1.577,-2.942],[0,0],[0.134,-0.239],[-0.015,0],[-0.214,0.024],[0,0],[-1.274,-0.062],[0.06,-0.196],[0.148,-0.27],[0.808,-0.914]],"v":[[131.531,-70.761],[131.783,-70.769],[132.505,-68.996],[132.444,-68.877],[128.644,-67.248],[128.231,-66.809],[125.88,-62.69],[121.761,-55.299],[121.755,-55.29],[121.912,-55.039],[123.697,-55.014],[124.327,-53.846],[124.3,-53.801],[118.088,-51.946],[117.388,-51.965],[114.265,-52.014],[114.012,-53.696],[114.037,-53.741],[117.367,-55.103],[117.537,-55.228],[121.33,-62.198],[123.597,-66.257],[123.652,-66.617],[123.587,-66.608],[123.041,-66.574],[122.953,-66.574],[121.225,-67.439],[121.481,-68.036],[122.06,-68.863]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7686,0.1725,0.3294],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.049,0.065],[-0.265,0.522],[0,0],[-4.215,7.902],[-1.143,-0.006],[-0.589,-0.009],[-2.574,-0.05],[0.612,-1.134],[0,0],[0.947,0.007],[2.003,0.171],[0.183,0.001],[0.328,-0.632],[0,0],[0.181,-0.346],[0,0],[-0.204,-0.001],[-0.012,0.006],[0,0],[0.324,-0.647],[0.014,-0.025],[1.015,0.012],[0,0],[0.301,-0.58],[0,0],[0.42,-0.808],[0,0],[-0.699,-0.01],[-0.091,0.004],[-1.017,-0.008],[0.667,-1.236],[0.086,-0.126],[3.905,0.062]],"o":[[-1.187,-0.072],[0,0],[1.881,-3.706],[0.321,-0.565],[0.01,0],[0.589,0.01],[2.582,0.05],[0,0],[-0.799,1.478],[-0.696,-0.005],[-0.222,-0.047],[-0.592,-0.004],[0,0],[-0.133,0.264],[0,0],[-0.555,1.094],[0.014,0],[0,0],[1.255,0.012],[-0.322,0.646],[-0.631,1.192],[0,0],[-0.297,0.009],[0,0],[-0.402,0.829],[0,0],[-0.148,0.284],[0.079,0.001],[1.497,-0.101],[1.266,0.09],[-0.065,0.12],[-0.663,0.942],[-0.883,-0.014]],"v":[[100.221,-52.029],[98.839,-52.919],[98.844,-52.928],[107.934,-70.241],[110.13,-71.08],[111.029,-71.067],[115.772,-70.977],[118.729,-69.199],[118.692,-69.13],[116.074,-66.928],[112.025,-67.192],[111.418,-67.264],[110.037,-66.322],[110.032,-66.312],[109.564,-65.397],[109.274,-64.84],[108.75,-63.199],[108.79,-63.207],[109.752,-63.198],[111.15,-62.209],[110.647,-61.206],[108.179,-59.437],[106.701,-59.454],[105.803,-58.571],[105.698,-58.367],[104.465,-55.913],[104.45,-55.885],[105.277,-55.444],[105.532,-55.45],[109.305,-55.59],[110.202,-53.597],[109.976,-53.229],[103.12,-51.911]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7686,0.1725,0.3294],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":7,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[12.649,-1.565],[0,0],[0,0],[-13.687,1.046]],"o":[[0,0],[-17.588,2.223],[0,0],[0,0],[16.751,-1.18],[0,0]],"v":[[179.666,62.158],[158.226,40.016],[97.051,47.709],[96.948,47.875],[117.879,67.194],[179.391,62.605]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7686,0.1725,0.3294],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[16.751,-1.18],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[-13.687,1.046]],"v":[[117.879,67.194],[118.124,67.42],[97.195,101.383],[158.738,96.121],[179.391,62.605]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.5373,0.0471,0.2196],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[12.569,-0.857],[0,0],[-17.588,2.223]],"o":[[0,0],[-13.676,0.972],[0,0],[12.649,-1.565],[0,0]],"v":[[157.829,39.606],[171.37,17.263],[113.396,21.342],[97.051,47.709],[158.226,40.016]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.5373,0.0471,0.2196],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0,0],[12.258,-0.369],[0,0]],"o":[[0,0],[0,0],[-15.597,0.588],[0,0],[0,0]],"v":[[167.22,-79.088],[166.83,-78.521],[142.683,-43.406],[85.71,-41.357],[104.356,-77.21]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.5373,0.0471,0.2196],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 5","ix":5,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-13.568,0.038],[0,0],[0,0],[12.256,-0.366],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[-15.596,0.593],[0,0],[0,0],[0,0],[14.808,0.043]],"v":[[164.195,-20.793],[142.608,-43.086],[142.684,-43.409],[85.71,-41.357],[85.698,-41.207],[105.551,-20.909],[105.416,-20.722]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7686,0.1725,0.3294],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 6","ix":6,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[14.808,0.043],[0,0],[0,0]],"o":[[0,0],[-13.568,0.038],[0,0],[0,0],[0,0]],"v":[[164.446,-20.534],[164.195,-20.793],[105.416,-20.722],[89.061,1.944],[150.595,1.944]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.5373,0.0471,0.2196],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 7","ix":7,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-13.676,0.972]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[12.569,-0.857],[0,0]],"v":[[171.725,16.678],[150.549,2.019],[150.595,1.944],[89.061,1.944],[89.007,2.019],[113.492,21.188],[113.396,21.342],[171.37,17.263]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7686,0.1725,0.3294],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[134,-76],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[100,100],"t":13},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[100,31.203],"t":18},{"s":[100,100],"t":28}],"ix":3,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[134,-76],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-2.595,1.156],[1.241,-6.48],[3.538,6.147],[-1.886,-1.099],[-0.369,-0.206]],"o":[[-3.19,5.814],[-1.538,-6.983],[2.141,1.46],[0.39,0.234],[1.73,-0.532]],"v":[[55.202,-47.058],[48.091,-28.674],[41.384,-48.979],[47.46,-45.101],[48.595,-44.449]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.4549,0,0.2078],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":5,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.064,-0.44],[3.992,4.637],[7.841,-3.283],[0,0],[-4.601,3.098],[-1.751,-6.005],[-0.007,-0.028],[-0.149,-0.801]],"o":[[-3.276,-5.275],[-8.061,2.701],[0,0],[8.777,-4.247],[5.19,3.949],[0.007,0.028],[0.241,0.787],[0.085,0.433]],"v":[[95.132,-43.25],[83.873,-58.103],[60.016,-49.12],[59.853,-49.234],[83.568,-62.335],[94.31,-47.036],[94.331,-46.951],[94.912,-44.561]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2549,0.0039,0.098],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.064,-0.44],[3.992,4.637],[7.841,-3.283],[0,0],[-4.601,3.098],[-1.751,-6.005],[-0.007,-0.028],[-0.149,-0.801]],"o":[[-3.276,-5.275],[-8.061,2.701],[0,0],[8.777,-4.247],[5.19,3.949],[0.007,0.028],[0.241,0.787],[0.085,0.433]],"v":[[95.132,-43.25],[83.873,-58.103],[60.016,-49.12],[59.853,-49.234],[83.568,-62.335],[94.31,-47.036],[94.331,-46.951],[94.912,-44.561]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2549,0.0039,0.098],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 3","ix":3,"cix":2,"np":1,"it":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[-4.474,-5.105],[-1.156,-0.95],[-0.184,-0.149],[-0.745,-0.523],[-0.386,-0.257],[-0.384,-0.247],[-0.58,-0.354],[-0.207,-0.125],[-0.768,-0.444],[-0.002,-0.001]],"o":[[0,0],[3.141,5.608],[0.886,1.014],[0.177,0.142],[0.685,0.542],[0.374,0.262],[0.375,0.251],[0.566,0.363],[0.206,0.126],[0.762,0.458],[0.002,0.001],[-10.299,-12.676]],"v":[[28.603,-55.794],[9.849,-48.035],[22.951,-32.608],[26.042,-29.666],[26.581,-29.233],[28.734,-27.638],[29.887,-26.865],[31.014,-26.113],[32.739,-25.042],[33.354,-24.663],[35.652,-23.309],[35.659,-23.305]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.4549,0,0.2078],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 4","ix":4,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.255,1.787],[0.085,0.433],[0.241,0.787],[0.007,0.028],[5.19,3.949],[8.777,-4.247],[1.468,-0.652],[1.73,-0.532],[0.39,0.234],[2.141,1.461],[3.697,2.865],[0,0],[-4.474,-5.105],[-1.156,-0.95],[-0.184,-0.149],[-3.353,-1.928],[-2.708,-1.85],[-11.833,5.551],[-0.021,0.34]],"o":[[-0.064,-0.44],[-0.149,-0.801],[-0.007,-0.028],[-1.751,-6.005],[-4.601,3.098],[-1.616,0.787],[-2.595,1.156],[-0.369,-0.206],[-1.886,-1.099],[-3.626,-2.478],[0,0],[3.141,5.608],[0.886,1.014],[0.177,0.142],[2.815,2.226],[3.623,2.099],[12.726,-2.999],[0.035,-0.34],[0.121,-1.85]],"v":[[95.132,-43.25],[94.912,-44.561],[94.331,-46.951],[94.31,-47.036],[83.568,-62.335],[59.853,-49.234],[55.202,-47.057],[48.595,-44.448],[47.461,-45.1],[41.385,-48.978],[28.603,-55.794],[9.849,-48.035],[22.951,-32.608],[26.042,-29.666],[26.581,-29.233],[36.152,-23.016],[46.057,-17.124],[95.259,-36.748],[95.345,-37.784]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.5569,0,0.1843],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 5","ix":5,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[0,0],[-0.951,0.529],[-1.159,0.681],[-1.973,1.268],[-1.646,1.337],[-0.215,0.409],[0.255,0.386],[0.794,-0.206],[-0.485,0.558],[0.29,0.68],[0.566,-0.475],[0.082,0.55],[0.543,0.123],[0.47,-0.297],[0.145,0.517],[0.517,0.146],[0.784,-0.661],[0.817,-0.955],[-0.012,-0.767],[0.34,0.854],[0.915,0.096],[0.736,-0.601],[2.269,-3.492]],"o":[[0.888,-0.587],[1.175,-0.654],[2.023,-1.188],[1.771,-1.138],[0.359,-0.291],[0.215,-0.409],[-0.452,-0.684],[0.655,-0.342],[0.485,-0.557],[-0.29,-0.68],[0.553,-0.058],[-0.082,-0.55],[-0.543,-0.123],[0.366,-0.393],[-0.145,-0.517],[-0.986,-0.279],[-0.975,0.822],[-0.489,0.572],[-0.015,-0.92],[-0.34,-0.854],[-0.945,-0.099],[-3.226,2.638],[0,0]],"v":[[92.42,-48.033],[95.402,-49.524],[98.903,-51.527],[104.897,-55.213],[110.206,-58.641],[111.136,-59.657],[111.144,-60.979],[108.875,-61.331],[110.685,-62.586],[111.143,-64.637],[109.321,-65.203],[110.193,-66.415],[109.085,-67.528],[107.493,-67.197],[107.858,-68.695],[106.769,-69.787],[104.03,-68.7],[101.337,-66.143],[99.075,-63.265],[98.7,-65.982],[96.71,-67.693],[94.167,-66.589],[85.972,-57.008]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7961,0.5333,0.3608],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":9}],"v":"5.7.11","fr":25,"op":151,"ip":0,"assets":[]}